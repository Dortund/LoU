namespace = LOTR_Elections

# Election!
country_event = {
	id = LOTR_Elections.1
	title = LOTR_Elections.1.title
    desc = LOTR_Elections.1.desc
	picture = ELECTION_REPUBLICAN_eventPicture
	
	is_triggered_only = yes
	
    trigger = {
		NOT = { has_states_general_mechanic = yes }
		NOT = { has_government_attribute = lottery_election }
		NOT = { has_reform = army_electorate_reform }
		NOT = { has_reform = naval_electorate_reform }
		#NOT = { has_reform = pirate_republic_reform }
	}
    
	option = {
		name = LOTR_Elections.1.option.a
        
		trigger = {
			has_regency = no
		}
        
		ai_chance = { 
			factor = 60
			modifier = {
				factor = 0
				NOT = { republican_tradition = 25 }
			}	
			modifier = {
				factor = 0.5
				NOT = { republican_tradition = 50 }
			}				
			modifier = {
				factor = 0.5
				NOT = { republican_tradition = 75 }
			}	
			modifier = {
				factor = 2.0
				republican_tradition = 90
			}		
		}
        
		custom_tooltip = remains_ruler
		change_adm = 1
		change_dip = 1
		change_mil = 1
        
		if = {
			limit = {
				is_tribal = no  
				government = republic
				NOT = { republican_tradition = 20 }
			}
			change_government_to_monarchy = yes
		}
		add_scaled_republican_tradition = -10
        
		random_list = {
			10 = {
				add_adm_power = 50
			}
			10 = {
				add_dip_power = 50
			}
			10 = {
				add_mil_power = 50
			}
		}
		add_karma = -5
	}
	option = {
		name = LOTR_Elections.1.option.b
		ai_chance = { factor = 20 }
        
		define_ruler = {
            mil = 1
            adm = 4
            dip = 1
            fixed = yes
            random_gender = yes # Allows random gender for republics
        }
		if = {
			limit = { 
				has_faction = mr_guilds 
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = 20
			}				
		}
		add_karma = 10
	}
    
	option = {
		name = LOTR_Elections.1.option.c
		ai_chance = { factor = 20 }
        
		define_ruler = {
            dip = 4
            adm = 1
            mil = 1					
            fixed = yes
            random_gender = yes # Allows random gender for republics
        }
		if = {
			limit = { 
				has_faction = mr_traders 
			}
			add_faction_influence = {
				faction = mr_traders
				influence = 20
			}				
		}
		add_karma = 10		
	}
    
	option = {
		name = LOTR_Elections.1.option.d
		ai_chance = { factor = 20 }
        
		define_ruler = {
            mil = 4
            adm = 1
            dip = 1					
            fixed = yes
            random_gender = yes # Allows random gender for republics
        }
		if = {
			limit = { 
				has_faction = mr_aristocrats 
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 20
			}				
		}
		add_karma = 10
	}

	option = { 
		name = LOTR_Elections.1.option.e
		trigger = {
			has_government_attribute = enables_nepotism
		}
		ai_chance = { factor = 10 }
		
        add_scaled_republican_tradition = -4
		
		define_ruler = {
            mil = -2
            adm = -2
            dip = -2
            min_age = 30
            max_age = 50
            name = "lastname"
            random_gender = yes # Allows random gender for republics
        }
		if = {
			limit = { 
				has_faction = mr_aristocrats 
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 10
			}				
		}
	}
}

# Election!
country_event = {
	id = LOTR_Elections.2
	title = LOTR_Elections.2.title
	desc = LOTR_Elections.2.desc
	picture = ELECTION_REPUBLICAN_eventPicture
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_states_general_mechanic = yes }
		NOT = { has_government_attribute = lottery_election }
		NOT = { has_reform = army_electorate_reform }
		NOT = { has_reform = naval_electorate_reform }
        #NOT = { has_reform = pirate_republic_reform }
	}
	
	option = {
		name = LOTR_Elections.2.option.a
		ai_chance = { factor = 40 }
        
		define_ruler = {
			mil = 1
			adm = 4
			dip = 1					
			fixed = yes
		}
		if = {
			limit = { 
				has_faction = mr_guilds 
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = 20
			}				
		}
	}
	option = {
		name = LOTR_Elections.2.option.b
		ai_chance = { factor = 30 }
        
		define_ruler = {
			dip = 4
			adm = 1
			mil = 1					
			fixed = yes
		}
		if = {
			limit = { 
				has_faction = mr_traders 
			}
			add_faction_influence = {
				faction = mr_traders
				influence = 20
			}				
		}			
	}
	option = {
		name = LOTR_Elections.2.option.c
		ai_chance = { factor = 30 }
		define_ruler = {
			mil = 4
			adm = 1
			dip = 1					
			fixed = yes
		}
		if = {
			limit = { 
				has_faction = mr_aristocrats 
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 20
			}				
		}		
	}
}

# Lottery Election by Daniel Tolman
country_event = {
	id = LOTR_Elections.3
	title = LOTR_Elections.3.title
	desc = LOTR_Elections.3.desc
	picture = ELECTION_REPUBLICAN_eventPicture
	
	is_triggered_only = yes
	
	trigger = {
		has_government_attribute = lottery_election
	}
	
	immediate = {
		hidden_effect = {
			define_exiled_ruler = {
                exiled_as = lottery_candidate_a_@ROOT
                random_gender = yes
                min_age = 50
                max_age = 75
                adm = 2
                dip = -1
                mil = -1
                option = 0
            }
			define_exiled_ruler = {
                exiled_as = lottery_candidate_b_@ROOT
                min_age = 50
                max_age = 75
                adm = -1
                dip = 2
                mil = -1
                random_gender = yes
                option = 1
            }
			define_exiled_ruler = {
                exiled_as = lottery_candidate_c_@ROOT
                min_age = 50
                max_age = 75
                adm = -1
                dip = -1
                mil = 2
                random_gender = yes
                option = 2
            }
		}
	}
	
	after = {
		clear_exiled_ruler = lottery_candidate_a_@ROOT
		clear_exiled_ruler = lottery_candidate_b_@ROOT
		clear_exiled_ruler = lottery_candidate_c_@ROOT
	}
	
	option = {
		name = LOTR_Elections.3.option.a
		ai_chance = {
			factor = 0
		}
		set_ruler = lottery_candidate_a_@ROOT
		add_republican_tradition = -25
		if = {
			limit = { 
				has_faction = mr_guilds 
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = 20
			}				
		}
		custom_tooltip = lottery_candidate_bonus_one
	}
	option = {
		name = LOTR_Elections.3.option.b
		ai_chance = {
			factor = 0
		}
		set_ruler = lottery_candidate_b_@ROOT
		add_republican_tradition = -25
		if = {
			limit = { 
				has_faction = mr_traders 
			}
			add_faction_influence = {
				faction = mr_traders
				influence = 20
			}				
		}
		custom_tooltip = lottery_candidate_bonus_one
	}
	option = {
		name = LOTR_Elections.3.option.c
		ai_chance = {
			factor = 0
		}
		set_ruler = lottery_candidate_c_@ROOT
		add_republican_tradition = -25
		if = {
			limit = { 
				has_faction = mr_aristocrats 
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 20
			}				
		}
		custom_tooltip = lottery_candidate_bonus_one
	}
	option = { 
		name = LOTR_Elections.3.option.d
		ai_chance = {
			factor = 90
		}
		random_list = {
			33 = { 
				set_ruler = lottery_candidate_a_@ROOT 
				if = {
					limit = { 
						has_faction = mr_guilds 
					}
					add_faction_influence = {
						faction = mr_guilds
						influence = 20
					}				
				}
			}
			33 = { 
				set_ruler = lottery_candidate_b_@ROOT 
				if = {
					limit = { 
						has_faction = mr_traders 
					}
					add_faction_influence = {
						faction = mr_traders
						influence = 20
					}				
				}
			}
			33 = { 
				set_ruler = lottery_candidate_c_@ROOT 
				if = {
					limit = { 
						has_faction = mr_aristocrats 
					}
					add_faction_influence = {
						faction = mr_aristocrats
						influence = 20
					}				
				}
			}
		}
		custom_tooltip = lottery_candidate_bonus_plural
	}
	option = {
		name = LOTR_Elections.3.option.e
		trigger = {
			has_government_attribute = enables_nepotism
		}
		ai_chance = { factor = 10 }
		
        add_republican_tradition = -15
		
		define_ruler = {
            min_age = 30
            max_age = 50
            mil = -1
            adm = -1
            dip = -1
            name = "lastname"
            random_gender = yes # Allows random gender for republics
        }
		if = {
			limit = { 
				has_faction = mr_aristocrats 
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 10
			}				
		}
	}
}

# States General
country_event = {
	id = LOTR_Elections.4
	title = LOTR_Elections.4.title
    desc = LOTR_Elections.4.desc
	picture = ELECTION_REPUBLICAN_eventPicture
	
	is_triggered_only = yes
	
	trigger = {
		has_states_general_mechanic = yes
		OR = {
			is_lesser_in_union = no
			is_statists_in_power = yes
		}
	}
	
	option = {
		name = LOTR_Elections.4.option.a

		define_ruler = {
		}
		change_statists_vs_orangists = -0.33
	
	}
	option = {
		name = LOTR_Elections.4.option.b

		define_ruler = {
            dynasty = historic_dynasty
        }
		change_statists_vs_orangists = 0.33
	}
}

country_event = {
	id = LOTR_Elections.5
	title = LOTR_Elections.5.title
    desc = LOTR_Elections.5.desc
	picture = ELECTION_REPUBLICAN_eventPicture
	
	is_triggered_only = yes
	
	trigger = {
		has_states_general_mechanic = yes
		OR = {
			is_lesser_in_union = no
			is_statists_in_power = yes
		}
	}
	
	option = {
		name = LOTR_Elections.5.option.a

		define_ruler = {
		}
		change_statists_vs_orangists = -0.33
	
	}
	option = {
		name = LOTR_Elections.5.option.b

		define_ruler = {
            dynasty = historic_dynasty
        }
		change_statists_vs_orangists = 0.33
	}
}